buildscript {
	ext.kotlin_version = "1.3.61"
	repositories {
		maven {
			name = "forge"
			url = "https://files.minecraftforge.net/maven"
		}

		maven {
			name = 'SpongePowered'
			url = 'https://repo.spongepowered.org/maven'
		}

		jcenter()
	}

	dependencies {
		classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
		classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
		classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
	}
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: 'org.spongepowered.mixin'
apply plugin: "com.github.johnrengelman.shadow"

version = modVersion
group = modGroup
archivesBaseName = modBaseName

minecraft {
	version = project.forgeVersion
	runDir = "run"
	mappings = project.mcpVersion
	coreMod = 'mephedronesolutions.lualoader.LualoaderEntryPoint'
	makeObfSourceJar = false
}

repositories {
	maven {
		name = 'spongepowered-repo'
		url = 'https://repo.spongepowered.org/maven/'
	}

	maven {
		name = "jitpack.io"
		url = "https://jitpack.io"
	}

	mavenCentral()
}

dependencies {
	compile("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
		exclude module: 'launchwrapper'
		exclude module: 'guava'
		exclude module: 'gson'
		exclude module: 'commons-io'
	}
}

jar {
	manifest {
		attributes(
			'MixinConfigs': 'mixins.lualoader.json',
			'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
			'TweakOrder': 0,
			'FMLCorePluginContainsFMLMod': 'true',
			'FMLCorePlugin': 'mephedronesolutions.lualoader.LualoaderEntryPoint',
			'ForceLoadAsMod': 'true',
		)
	}
}

reobf {
	shadowJar {
		mappingType = 'SEARGE'
		classpath = sourceSets.main.compileClasspath
	}
}

shadowJar {
	dependencies {
		include(dependency('org.spongepowered:mixin'))
	}

	classifier = 'shadow'
}

task clientJar(type: Jar, dependsOn: jar) {
	from(zipTree(shadowJar.archivePath)) {
		include "fuck/you/stupid/paster/**"

		include "mixins.lualoader.json"
		include "mixins.lualoader.refmap.json"
	}

	baseName = ""
	version = ""
	classifier = "luaclient"
}

task loaderJar(type: Jar, dependsOn: jar) {
	from(zipTree(shadowJar.archivePath)) {
		exclude "fuck/you/stupid/paster/**"

		exclude "mixins.lualoader.json"
		exclude "mixins.lualoader.refmap.json"
	}

	baseName = ""
	version = ""
	classifier = "lualoader"
}

build.dependsOn(clientJar, loaderJar)

processResources {
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	from(sourceSets.main.resources.srcDirs) {
		include "mcmod.info"
		expand "version": project.version, "mcversion": project.minecraft.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "mcmod.info"
	}
}

sourceSets {
	main.java.srcDirs = ["src/main/java"]
	main.resources.srcDirs = ["src/main/resources"]
}
